#version 460
#extension GL_EXT_ray_query : enable

layout(set = 0, binding = 0) uniform Uniforms 
{
	mat4 viewInverse;
	mat4 projInverse;
} cam;
layout(set = 0, binding = 1, rgba8) uniform image2D image;
layout(set = 0, binding = 2) uniform accelerationStructureEXT tlas;

layout(local_size_x = 8, local_size_y = 8) in;

void main() 
{
    uvec2 launch_id = gl_GlobalInvocationID.xy;
    uvec2 launch_size = gl_NumWorkGroups.xy * 8;

	const vec2 pixelCenter = vec2(launch_id) + vec2(0.5);
	const vec2 inUV = pixelCenter/vec2(launch_size);
	vec2 d = inUV * 2.0 - 1.0;

	vec4 origin = cam.viewInverse * vec4(0,0,0,1);
	vec4 target = cam.projInverse * vec4(d.x, d.y, 1, 1) ;
	vec4 direction = cam.viewInverse*vec4(normalize(target.xyz), 0) ;

	float tmin = 0.001;
	float tmax = 10000.0;

	rayQueryEXT rayQuery;
    rayQueryInitializeEXT(rayQuery, tlas, gl_RayFlagsOpaqueEXT, 0xff, origin.xyz, tmin, direction.xyz, tmax);

	rayQueryProceedEXT(rayQuery);

    vec3 out_colour = vec3(0.0, 0.0, 0.0);

    if (rayQueryGetIntersectionTypeEXT(rayQuery, true) == gl_RayQueryCommittedIntersectionTriangleEXT ) {
        vec2 barycentrics = rayQueryGetIntersectionBarycentricsEXT(rayQuery, true);

        out_colour = vec3(barycentrics.x, barycentrics.y, 1.0 - barycentrics.x - barycentrics.y);
    }

	imageStore(image, ivec2(launch_id), vec4(out_colour, 1.0));
}